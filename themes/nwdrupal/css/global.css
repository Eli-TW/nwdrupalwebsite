@charset "UTF-8";
/*------------------------------------*\
    #BOWER OVERRIDES
\*------------------------------------*/
/*------------------------------------*\
    #BOWER INCLUDES
\*------------------------------------*/
/* 
* @preserve brand-colors 0.5.5
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
/*------------------------------------*\
    #IMPORT TOOLS AND SETTINGS
\*------------------------------------*/
/*------------------------------------*\
    #COLORS
\*------------------------------------*/
/*------------------------------------*\
    #FONTS
\*------------------------------------*/
/*------------------------------------*\
    #BREAKPOINTS
\*------------------------------------*/
/*------------------------------------*\
    #MISC
\*------------------------------------*/
/*------------------------------------*\
    #BREAKPOINT MEDIA QUERY MIXIN
\*------------------------------------*/
/*------------------------------------*\
    #FONT FACE MIXIN
    Stolen shamelessy from this Codpen -> http://codepen.io/javasteve99/pen/hDxpn
\*------------------------------------*/
/*------------------------------------*\
    #CLEARFIX MIXIN
\*------------------------------------*/
/*------------------------------------*\
    #EM/REM MIXIN
    Create ems from px (target ÷ context = result)
\*------------------------------------*/
/*------------------------------------*\
    #KEYFRAME MIXIN
    No support in autoprefixr yet
\*------------------------------------*/
/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/*------------------------------------*\
    #TEXT DECORATION
\*------------------------------------*/
/*------------------------------------*\
    #INVISIBILITY CLOAK
\*------------------------------------*/
/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/*------------------------------------*\
    #IMPORT BASE
\*------------------------------------*/
@import url(https://fonts.googleapis.com/css?family=Alegreya+Sans:400,500,700,800,400italic,700italic,500italic,800italic);
*,
*:before,
*:after {
  box-sizing: inherit;
}

html,
body {
  box-sizing: border-box;
  margin: 0;
  overflow-x: hidden;
  padding: 0;
  width: 100%;
}

html {
  font-size: 100%;
  font-family: "Alegreya Sans", sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

body {
  overflow-x: hidden;
  font-size: 100%;
  line-height: 1.6;
  color: #555;
  overflow-x: hidden;
}
@media (min-width: 30em) {
  body {
    font-size: 112.5%;
    line-height: 1.6;
  }
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Alegreya Sans", sans-serif;
  font-weight: 700;
  color: #0947aa;
  line-height: 1.4em;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  color: inherit;
}
h1 a:visited, h1 a:hover, h1 a:focus, h2 a:visited, h2 a:hover, h2 a:focus, h3 a:visited, h3 a:hover, h3 a:focus, h4 a:visited, h4 a:hover, h4 a:focus, h5 a:visited, h5 a:hover, h5 a:focus, h6 a:visited, h6 a:hover, h6 a:focus {
  color: inherit;
}
h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child {
  margin-top: 0;
}

p {
  margin-top: 0.75em;
  margin-bottom: 1.5em;
}
p:first-child {
  margin-top: 0;
}

h1 {
  font-size: 2.5em;
}

h2 {
  font-size: 1.4em;
}

h3 {
  font-size: 1.2em;
}

h4 {
  font-size: 1em;
}

h5 {
  font-size: 1em;
}

h6 {
  font-size: 1em;
}

h1 {
  line-height: 1.15;
}

h1,
h2 {
  font-weight: 800;
}

a {
  text-decoration: none;
  color: #0947aa;
}
a:hover, a:focus {
  text-decoration: underline;
}

ul,
ol {
  padding-left: 1.3em;
}

img {
  vertical-align: bottom;
  max-width: 100%;
  height: auto !important;
  width: auto\9;
  /* ie8+9 */
}

.floatleft {
  float: left;
  margin-right: 1em;
}

.floatright {
  float: right;
  margin-left: 1em;
}

.floatleft img,
.floatright img {
  float: none !important;
}

/*------------------------------------*\
    #IMPORT MODULES
\*------------------------------------*/
@font-face {
  font-family: 'fontello';
  src: url("../fonts/fontello.eot?54678544");
  src: url("../fonts/fontello.eot?54678544#iefix") format("embedded-opentype"), url("../fonts/fontello.woff?54678544") format("woff"), url("../fonts/fontello.ttf?54678544") format("truetype"), url("../fonts/fontello.svg?54678544#fontello") format("svg");
  font-weight: normal;
  font-style: normal;
}
/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?54678544#fontello') format('svg');
  }
}
*/
.fontello-icon, [class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-left-open-big:before {
  content: '\e800';
}

/* '' */
.icon-right-open-big:before {
  content: '\e801';
}

/* '' */
.icon-up-open-big:before {
  content: '\e802';
}

/* '' */
.icon-down-open-big:before {
  content: '\e803';
}

/* '' */
.icon-down-open:before {
  content: '\e804';
}

/* '' */
.icon-right-open:before {
  content: '\e805';
}

/* '' */
.icon-left-open:before {
  content: '\e806';
}

/* '' */
.icon-up-open:before {
  content: '\e807';
}

/* '' */
.region-header {
  padding-top: 1em;
  padding-bottom: 1em;
  position: relative;
}

.region-hero {
  padding-top: 2.5em;
  padding-bottom: 2.5em;
}
.region-hero .block {
  width: 50%;
  color: white;
}
.region-hero .block h1, .region-hero .block h2, .region-hero .block h3, .region-hero .block h4 {
  color: white;
}

.path-frontpage h1.page-title {
  text-align: center;
  font-size: 200%;
  color: black;
}

@media (min-width: 48em) {
  .node--type-event.node--view-mode-teaser .event-data {
    float: left;
    width: 10em;
  }
}
@media (min-width: 48em) {
  .node--type-event.node--view-mode-teaser .event-description {
    float: right;
    width: calc(100% - 11.5em);
  }
}
.node--type-event.node--view-mode-full .event-data {
  width: 30.76923%;
  float: left;
  margin-right: 3.84615%;
}
.node--type-event.node--view-mode-full .event-description {
  width: 65.38462%;
  float: left;
  margin-right: 0;
}

.container div.layout-content {
  width: 76.92308%;
  float: left;
  margin-right: 3.84615%;
}
.container aside.layout-sidebar-first {
  width: 19.23077%;
  float: left;
  margin-right: 0;
}

.event-page-map div.event-page-map-left {
  width: 19.23077%;
  float: left;
  margin-right: 3.84615%;
}
.event-page-map div.event-page-map-right {
  width: 76.92308%;
  float: left;
  margin-right: 0;
}

.front-page-join {
  margin-top: 400px;
}
.front-page-join div.front-page-join-left {
  width: 47.82609%;
  float: left;
  margin-right: 4.34783%;
}
.front-page-join div.front-page-join-right {
  width: 47.82609%;
  float: left;
  margin-right: 0;
}

#block-footer-legal {
  font-size: 0.888em;
  line-height: 1.6;
}
#block-footer-legal ul {
  margin-bottom: 1em;
}
#block-footer-legal p {
  margin: 0;
}
#block-footer-legal a {
  color: #555;
  text-decoration: underline;
}
#block-footer-legal a:hover, #block-footer-legal a:focus {
  text-decoration: underline;
}

#block-nwdrupal-main-menu {
  position: absolute;
  width: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}

#block-nwdrupal-branding {
  width: 29%;
  margin: 0 auto;
}

#block-welcometext h1 {
  font-size: 3.4em;
  font-weight: 700;
  margin: 0 0 0.25em 0;
}
#block-welcometext p {
  font-size: 1.4em;
  margin: 0 0 1.5em 0;
  line-height: 1.25;
}

.node--type-event.node--view-mode-teaser {
  overflow: hidden;
  position: relative;
}

.first-event.node--type-event.node--view-mode-teaser {
  padding-top: 3.5em;
}
@media (min-width: 48em) {
  .first-event.node--type-event.node--view-mode-teaser {
    padding-top: 21px;
    padding-right: 2em;
  }
}
.first-event.node--type-event.node--view-mode-teaser:after {
  position: absolute;
  top: 0;
  right: 0;
  display: block;
  width: 9em;
  padding: 0.2em 0.5em;
  background-color: forestgreen;
  color: white;
  font-weight: bold;
  font-size: 1em;
  text-align: center;
  text-transform: uppercase;
  content: "Next Event";
}
@media (min-width: 48em) {
  .first-event.node--type-event.node--view-mode-teaser:after {
    -webkit-transform: translateX(30%) rotate(45deg) translateY(-100%);
        -ms-transform: translateX(30%) rotate(45deg) translateY(-100%);
            transform: translateX(30%) rotate(45deg) translateY(-100%);
    -webkit-transform-origin: top left;
        -ms-transform-origin: top left;
            transform-origin: top left;
  }
}

body.path-frontpage div.view-events article {
  border: 1px #eee solid;
  background: white;
  overflow: hidden;
  padding-bottom: 23px;
  padding-top: 21px;
  padding-right: 1em;
  margin-bottom: 20px;
  float: left;
  width: 48%;
}
body.path-frontpage div.view-events article.first-event {
  width: 100%;
  float: none;
}
body.path-frontpage div.view-events article.last-event {
  margin-left: 4%;
}
body.path-frontpage div.view-events .view-footer {
  display: block;
  clear: both;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

div.view-events article {
  border: 1px #eee solid;
  background: white;
  padding-bottom: 23px;
  padding-top: 21px;
  margin-bottom: 20px;
}

div.event-data div {
  padding: 0.1rem;
  margin-left: 0.5rem;
  margin-top: 1rem;
  background: #f8f8f8;
  text-align: center;
}
div.event-data div.event-date {
  background: #0947aa;
  color: white;
  font-size: 1.5rem;
  margin-top: -0.8rem;
}
div.event-data div.field--name-field-event-rsvps {
  width: auto;
}

div.event-meetup-advert-block {
  padding: 40px;
  background: white;
  margin-bottom: 20px;
  border: 1px #eee solid;
  background-image: url("/themes/nwdrupal/images/meetup_logo_slant.png");
  background-repeat: no-repeat;
  text-align: right;
  font-size: 1.75rem;
  padding-left: 30rem;
  font-weight: bold;
  background-position-y: -8rem;
  background-position-x: -1rem;
}

.footer-community-links {
  padding: 0;
  margin: 0;
  list-style-type: none;
}
.footer-community-links > li {
  display: inline-block;
}
.footer-community-links > li {
  margin-right: 1em;
}
.footer-community-links > li:last-child {
  margin-right: 0;
}

#block-nwdrupal-main-menu .menu {
  padding: 0;
  margin: 0;
  list-style-type: none;
  height: 2.4em;
}
#block-nwdrupal-main-menu .menu > li {
  display: inline-block;
}
#block-nwdrupal-main-menu .menu > li {
  width: 16%;
  position: absolute;
  top: 0;
  text-align: center;
  font-size: 1.1em;
  padding: 0;
}
#block-nwdrupal-main-menu .menu > li:nth-child(1) {
  left: 0;
}
#block-nwdrupal-main-menu .menu > li:nth-child(2) {
  left: 16%;
}
#block-nwdrupal-main-menu .menu > li:nth-child(3) {
  left: 68%;
}
#block-nwdrupal-main-menu .menu > li:nth-child(4) {
  left: 84%;
}
#block-nwdrupal-main-menu .menu > li a {
  color: white;
  display: block;
  padding: 0 0 0.5em 0;
  text-decoration: none;
  border-bottom: 1px solid rgba(255, 255, 255, 0.8);
}
#block-nwdrupal-main-menu .menu > li a:hover, #block-nwdrupal-main-menu .menu > li a:focus {
  text-decoration: none;
}
#block-nwdrupal-main-menu .menu > li a.is-active {
  font-weight: 700;
}

[class^="btn"] {
  display: inline-block;
  padding: 0.55em 0.85em 0.45em 0.85em;
  background: #0947aa;
  box-shadow: #041f49 0 0.175em 0;
  color: white;
  text-transform: uppercase;
  font-size: 0.8em;
  line-height: 1.25;
  border-radius: 0.15em;
  text-decoration: none;
  font-weight: 500;
  border: none;
  outline: none;
}
[class^="btn"]:hover, [class^="btn"]:focus {
  text-decoration: none;
}
[class^="btn"] .icon-right-open,
[class^="btn"] .icon-right-open-big {
  margin-left: 1.5em;
}
[class^="btn"] .icon-right-open:before,
[class^="btn"] .icon-right-open-big:before {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  transition: all 0.25s;
}
[class^="btn"] .icon-left-open,
[class^="btn"] .icon-left-open-big {
  margin-right: 1.5em;
}
[class^="btn"] .icon-left-open:before,
[class^="btn"] .icon-left-open-big:before {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  transition: all 0.25s;
}
[class^="btn"]:hover .icon-right-open:before,
[class^="btn"]:hover .icon-right-open-big:before, [class^="btn"]:focus .icon-right-open:before,
[class^="btn"]:focus .icon-right-open-big:before {
  -webkit-transform: translateX(0.15em);
      -ms-transform: translateX(0.15em);
          transform: translateX(0.15em);
}
[class^="btn"]:hover .icon-left-open:before,
[class^="btn"]:hover .icon-left-open-big:before, [class^="btn"]:focus .icon-left-open:before,
[class^="btn"]:focus .icon-left-open-big:before {
  -webkit-transform: translateX(-0.15em);
      -ms-transform: translateX(-0.15em);
          transform: translateX(-0.15em);
}
[class^="btn"].btn-yellow {
  background: #FAB937;
  box-shadow: #c68605 0 0.175em 0;
}
[class^="btn"].btn-red {
  background: #EF3D57;
  box-shadow: #b70f28 0 0.175em 0;
}
[class^="btn"].btn-green {
  background: #45D478;
  box-shadow: #229149 0 0.175em 0;
}
[class^="btn"].btn-blue {
  background: #1D8BE0;
  box-shadow: #115386 0 0.175em 0;
}
[class^="btn"].btn-grey {
  background: #F7F7F7;
  box-shadow: #c4c4c4 0 0.175em 0;
}
[class^="btn"].btn-small {
  font-size: 0.888em;
  padding: 0.35em 0.75em 0.2em 0.75em;
}
[class^="btn"].btn-smallest {
  font-size: 0.777em;
  padding: 0.35em 0.75em 0.2em 0.75em;
}

.region-footer .block {
  border-top: 1px solid #dadada;
  padding: 1.25em 0;
}

.layout-copyright {
  background: #0947aa;
  color: white;
  padding: 0.75em 0;
  font-size: 0.777em;
}
.layout-copyright p {
  margin: 0;
}
.layout-copyright a {
  color: white;
  text-decoration: underline;
}
.layout-copyright a:hover, .layout-copyright a:focus {
  text-decoration: underline;
}

.region-copyright {
  float: right;
}
.region-copyright .menu {
  margin: 0;
  padding: 0;
}

/*------------------------------------*\
    #IMPORT LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    #GRID HINTS

    < TEDDY = FULL WIDTH STACKED DIVS
    TEDDY   = 6 COL GRID WITH STACKED SIDEBARS
    BABY    = AS TEDDY
    MAMA    = 12 COL FLUID GRID WITH SIDEBARS
    PAPA    = 12 COL GRID FIXED AT 62EM WIDTH CONTAINER
    GRIZZLY = 12 COL GRID FIXED AT 75EM WIDTH CONTAINER
\*------------------------------------*/
.container,
.container-narrow {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  box-sizing: border-box;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.container:after,
.container-narrow:after {
  content: " ";
  display: block;
  clear: both;
}
@media (min-width: 62em) {
  .container,
  .container-narrow {
    width: 62rem;
  }
}
@media (min-width: 75em) {
  .container,
  .container-narrow {
    width: 75rem;
  }
}

@media (min-width: 62em) {
  .container-narrow {
    width: 56rem;
  }
}
@media (min-width: 75em) {
  .container-narrow {
    width: 67rem;
  }
}

header[role=banner] {
  background-image: url("../images/banner_background.jpg");
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
}

main[role=main] {
  background: #f7f7f7;
  padding: 3em 0;
}

/*------------------------------------*\
    #IMPORT MODULE
\*------------------------------------*/



/*# sourceMappingURL=data:application/json;base64, */
