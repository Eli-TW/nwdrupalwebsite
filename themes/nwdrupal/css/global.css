@charset "UTF-8";
/*------------------------------------*\
    #BOWER OVERRIDES
\*------------------------------------*/
/*------------------------------------*\
    #BOWER INCLUDES
\*------------------------------------*/
/* 
* @preserve brand-colors 0.5.5
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
/*------------------------------------*\
    #IMPORT TOOLS AND SETTINGS
\*------------------------------------*/
/*------------------------------------*\
    #COLORS
\*------------------------------------*/
/*------------------------------------*\
    #FONTS
\*------------------------------------*/
/*------------------------------------*\
    #BREAKPOINTS
\*------------------------------------*/
/*------------------------------------*\
    #MISC
\*------------------------------------*/
/*------------------------------------*\
    #BREAKPOINT MEDIA QUERY MIXIN
\*------------------------------------*/
/*------------------------------------*\
    #FONT FACE MIXIN
    Stolen shamelessy from this Codpen -> http://codepen.io/javasteve99/pen/hDxpn
\*------------------------------------*/
/*------------------------------------*\
    #CLEARFIX MIXIN
\*------------------------------------*/
/*------------------------------------*\
    #EM/REM MIXIN
    Create ems from px (target รท context = result)
\*------------------------------------*/
/*------------------------------------*\
    #KEYFRAME MIXIN
    No support in autoprefixr yet
\*------------------------------------*/
/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/*------------------------------------*\
    #TEXT DECORATION
\*------------------------------------*/
/*------------------------------------*\
    #INVISIBILITY CLOAK
\*------------------------------------*/
/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/*------------------------------------*\
    #IMPORT BASE
\*------------------------------------*/
@import url(https://fonts.googleapis.com/css?family=Alegreya+Sans:400,500,700,800,400italic,700italic,500italic,800italic);
*,
*:before,
*:after {
  box-sizing: inherit;
}

html,
body {
  box-sizing: border-box;
  margin: 0;
  overflow-x: hidden;
  padding: 0;
  width: 100%;
}

html {
  font-size: 100%;
  font-family: "Alegreya Sans", sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

body {
  overflow-x: hidden;
  font-size: 100%;
  line-height: 1.6;
  color: #555;
  overflow-x: hidden;
}
@media (min-width: 30em) {
  body {
    font-size: 112.5%;
    line-height: 1.6;
  }
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Alegreya Sans", sans-serif;
  font-weight: 700;
  color: #0947aa;
  line-height: 1.4em;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  color: inherit;
}
h1 a:visited, h1 a:hover, h1 a:focus, h2 a:visited, h2 a:hover, h2 a:focus, h3 a:visited, h3 a:hover, h3 a:focus, h4 a:visited, h4 a:hover, h4 a:focus, h5 a:visited, h5 a:hover, h5 a:focus, h6 a:visited, h6 a:hover, h6 a:focus {
  color: inherit;
}
h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child {
  margin-top: 0;
}

p {
  margin-top: 0.75em;
  margin-bottom: 1.5em;
}
p:first-child {
  margin-top: 0;
}

h1 {
  font-size: 2.5em;
}

h2 {
  font-size: 1.4em;
}

h3 {
  font-size: 1.2em;
}

h4 {
  font-size: 1em;
}

h5 {
  font-size: 1em;
}

h6 {
  font-size: 1em;
}

h1,
h2 {
  font-weight: 800;
}

a {
  text-decoration: none;
  color: #0947aa;
}
a:hover, a:focus {
  text-decoration: underline;
}

ul,
ol {
  padding-left: 1.3em;
}

img {
  vertical-align: bottom;
  max-width: 100%;
  height: auto !important;
  width: auto\9;
  /* ie8+9 */
}

.floatleft {
  float: left;
  margin-right: 1em;
}

.floatright {
  float: right;
  margin-left: 1em;
}

.floatleft img,
.floatright img {
  float: none !important;
}

/*------------------------------------*\
    #IMPORT MODULES
\*------------------------------------*/
#block-footer-legal {
  font-size: 0.888em;
  line-height: 1.6;
}
#block-footer-legal ul {
  margin-bottom: 1em;
}
#block-footer-legal p {
  margin: 0;
}
#block-footer-legal a {
  color: #555;
  text-decoration: underline;
}
#block-footer-legal a:hover, #block-footer-legal a:focus {
  text-decoration: underline;
}

#block-nwdrupal-main-menu {
  position: absolute;
  width: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}
#block-nwdrupal-main-menu .menu {
  padding: 0;
  margin: 0;
  list-style-type: none;
}
#block-nwdrupal-main-menu .menu > li {
  display: inline-block;
}
#block-nwdrupal-main-menu .menu > li {
  width: 18%;
  position: absolute;
  top: 0;
  text-align: center;
}
#block-nwdrupal-main-menu .menu > li:nth-child(1) {
  left: 0;
}
#block-nwdrupal-main-menu .menu > li:nth-child(2) {
  left: 18%;
}
#block-nwdrupal-main-menu .menu > li:nth-child(3) {
  left: 64%;
}
#block-nwdrupal-main-menu .menu > li:nth-child(4) {
  left: 82%;
}
#block-nwdrupal-main-menu .menu > li a {
  color: white;
  display: block;
  padding: 0.25em 0;
  text-decoration: none;
  border-bottom: 1px solid rgba(255, 255, 255, 0.8);
}
#block-nwdrupal-main-menu .menu > li a:hover, #block-nwdrupal-main-menu .menu > li a:focus {
  text-decoration: none;
}

#block-nwdrupal-branding {
  width: 24%;
  margin: 0 auto;
}

.footer-community-links {
  padding: 0;
  margin: 0;
  list-style-type: none;
}
.footer-community-links > li {
  display: inline-block;
}
.footer-community-links > li {
  margin-right: 1em;
}
.footer-community-links > li:last-child {
  margin-right: 0;
}

/*------------------------------------*\
    #IMPORT LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    #GRID HINTS

    < TEDDY = FULL WIDTH STACKED DIVS
    TEDDY   = 6 COL GRID WITH STACKED SIDEBARS
    BABY    = AS TEDDY
    MAMA    = 12 COL FLUID GRID WITH SIDEBARS
    PAPA    = 12 COL GRID FIXED AT 62EM WIDTH CONTAINER
    GRIZZLY = 12 COL GRID FIXED AT 75EM WIDTH CONTAINER
\*------------------------------------*/
.container,
.container-narrow {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  box-sizing: border-box;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.container:after,
.container-narrow:after {
  content: " ";
  display: block;
  clear: both;
}
@media (min-width: 62em) {
  .container,
  .container-narrow {
    width: 62rem;
  }
}
@media (min-width: 75em) {
  .container,
  .container-narrow {
    width: 75rem;
  }
}

@media (min-width: 62em) {
  .container-narrow {
    width: 56rem;
  }
}
@media (min-width: 75em) {
  .container-narrow {
    width: 67rem;
  }
}

header[role=banner] {
  background-image: url("../images/banner_background.jpg");
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
}

main[role=main] {
  background: #f7f7f7;
  padding: 3em 0;
}

.region-hero .block {
  width: 50%;
  color: white;
}
.region-hero .block h1, .region-hero .block h2, .region-hero .block h3, .region-hero .block h4 {
  color: white;
}

.region-header {
  padding: 1em 0;
  position: relative;
}

.region-footer .block {
  border-top: 1px solid #dadada;
  padding: 1.25em 0;
}

.layout-copyright {
  background: #0947aa;
  color: white;
  padding: 0.75em 0;
  font-size: 0.777em;
}
.layout-copyright p {
  margin: 0;
}
.layout-copyright a {
  color: white;
  text-decoration: underline;
}
.layout-copyright a:hover, .layout-copyright a:focus {
  text-decoration: underline;
}

.region-copyright {
  float: right;
}
.region-copyright .menu {
  margin: 0;
  padding: 0;
}

/*------------------------------------*\
    #IMPORT MODULE
\*------------------------------------*/



/*# sourceMappingURL=data:application/json;base64, */
